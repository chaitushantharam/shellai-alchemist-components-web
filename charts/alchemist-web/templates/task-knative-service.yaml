apiVersion: serving.knative.dev/v1beta1
kind: Service
metadata:
  name: "{{ .Values.knative.task.name }}"
  namespace: alchemist
  labels:
    app.kubernetes.io/name: "{{ .Values.knative.task.name }}"
    app.kubernetes.io/instance: "{{ .Values.knative.task.name }}"
spec:
  template:
    metadata:
      namespace: alchemist
      name: "{{ .Values.knative.task.name }}-{{ .Values.config.deploymentId }}"
      labels:
        version: "{{ .Values.knative.task.image.tag }}"
      annotations:
        # Knative concurrency-based autoscaling
        autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
        autoscaling.knative.dev/metric: concurrency
        # Target number of in-flight requests per pod.
        autoscaling.knative.dev/target: {{ .Values.knative.task.autoscaling.inflightRequests | quote }}
        # Enable scale to zero by commenting out minScale
        autoscaling.knative.dev/minScale: {{ .Values.knative.task.autoscaling.minScale | quote }}
        # Limit scaling to 10 pods.
        autoscaling.knative.dev/maxScale: {{ .Values.knative.task.autoscaling.maxScale | quote }}
    spec:
      serviceAccountName: "{{ .Values.knative.task.name }}"
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
          - image: "{{ .Values.knative.task.image.repository }}:{{ .Values.knative.task.tag }}"
            args:
              - kangaroo
            imagePullPolicy: IfNotPresent
            ports:
              - protocol: TCP
                containerPort: {{ .Values.knative.task.containerPort }}
            resources:
              {{- toYaml .Values.knative.task.resources | nindent 14 }}
            readinessProbe:
              httpGet:
                path: /health
              initialDelaySeconds: 10
              periodSeconds: 10
              failureThreshold: 10
              timeoutSeconds: 10
            livenessProbe:
              httpGet:
                path: /health
              initialDelaySeconds: 10
              periodSeconds: 10
              failureThreshold: 5
              timeoutSeconds: 10
            env:
              - name: MODULE_NAME
                value: "{{ .Values.knative.task.name }}"
              - name: K_SERVICE_URL
                value: "{{ .Values.knative.task.name }}.alchemist.svc.cluster.local"
              - name: REVISION_NAME
                value: "{{ .Values.knative.task.revisionName }}"
              - name: DNS_PREFIX
                value: "{{ .Values.knative.task.dnsPrefix }}"
            envFrom:
              - secretRef:
                  name: alchemist-web
              - configMapRef:
                  name: alchemist-web
              - configMapRef:
                  name: alchemist-jobs
      timeoutSeconds: 600